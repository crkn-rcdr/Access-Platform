{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://github.com/crkn-rcdr/Access-Platform/blob/master/Databases/schemas/canvas.json",
  "title": "Canvas Document Schema",
  "description": "",
  "type": "object",
  "properties": {
    "_id": { "$ref": "#/definitions/canvasNoid" },
    "source": {
      "description": "Information about this canvas's preservation origin",
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "from": {
              "description": "Sourced from legacy Canadiana preservation",
              "const": "cihm"
            },
            "path": {
              "description": "cihm Swift path to source image",
              "type": "string"
            }
          },
          "required": ["from", "path"]
        },
        {
          "properties": {
            "from": {
              "description": "Sourced from CRKN Archivematica installation",
              "const": "am"
            },
            "aipId": {
              "description": "Archivematica AIP ID",
              "type": "string"
            },
            "objId": {
              "description": "Archivematica Object ID",
              "type": "string"
            }
          },
          "required": ["from", "aipId", "objId"]
        }
      ]
    },
    "orphan": {
      "description": "As time goes on or errors take place, some canvases may no longer be referenced by manifest. These canvases may be marked as orphans by setting this flag.",
      "type": "boolean",
      "default": false
    },
    "updateInternalmeta": {
      "allOf": [
        {
          "description": "Trigger for updating the manifests that own this canvas in internalmeta, or result of an attempted update"
        },
        { "$ref": "#/definitions/update" }
      ]
    }
  },
  "required": ["_id", "source"],
  "oneOf": [
    {
      "properties": {
        "master": {
          "description": "Information about this canvas's master image. If path is not specified, a file should exist in the access object store at $id.$extension",
          "type": "object",
          "properties": {
            "mime": { "$ref": "#/definitions/mime" },
            "size": { "type": "number" },
            "width": { "type": "number" },
            "height": { "type": "number" },
            "update": {
              "allOf": [
                {
                  "description": "Update for the service that checks Cantaloupe for dimension information"
                },
                { "#ref": "#/definitions/update" }
              ]
            }
          },
          "required": ["mime", "size"],
          "oneOf": [
            {
              "properties": {
                "path": {
                  "$ref": "#/definitions/legacyRepoPath"
                }
              },
              "required": ["path"]
            },
            {
              "properties": {
                "extension": {
                  "type": "string",
                  "enum": ["jpg", "jp2", "jpeg", "tif", "tiff"]
                }
              },
              "required": ["extension"]
            }
          ]
        },
        "ocrPdf": {
          "description": "Information about the derivative PDF generated by OCR. If path is not specified, a file should exist in the access object store at $id.pdf",
          "type": "object",
          "properties": {
            "path": {
              "$ref": "#/definitions/legacyRepoPath"
            },
            "size": { "type": "number" }
          },
          "required": ["size"]
        },
        "ocrType": {
          "description": "The type of the OCR XML data associated with this canvas",
          "type": "string",
          "enum": ["alto", "txtmap"]
        }
      },
      "required": ["master"]
    },
    {
      "properties": {
        "takedown": {
          "type": "string",
          "enum": ["copyright", "privacy"]
        }
      },
      "required": ["takedown"]
    }
  ],
  "definitions": {
    "mime": {
      "description": "A MIME type",
      "type": "string",
      "pattern": "^\\w+/\\w+$"
    },
    "legacyRepoPath": {
      "description": "Path to a file in the legacy preservation repository. Will need to be prepended with a Swift account URL",
      "type": "string"
    },
    "canvasNoid": {
      "description": "Canvas NOID",
      "type": "string",
      "pattern": "^69429\\/c[0-9]+[0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]$"
    },
    "update": {
      "type": "object",
      "properties": {
        "requestDate": {
          "type": "string",
          "format": "date-time"
        },
        "processDate": {
          "type": "string",
          "format": "date-time"
        },
        "succeeded": { "type": "boolean" },
        "message": { "type": "string" }
      },
      "required": ["requestDate"]
    }
  }
}

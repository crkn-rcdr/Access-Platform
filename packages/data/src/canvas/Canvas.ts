import { z } from "zod";
import { UnixFilePath } from "../util/UnixFilePath.js";
import { Identified } from "../util/Identified.js";
import { FileRef } from "../util/FileRef.js";
import { ImageRef } from "../util/ImageRef.js";
import { MD5 } from "../util/MD5.js";
import { Noid } from "../util/Noid.js";

/**
 * The virtual representation of the space taken up by a page of a Manifest.
 */
export const Canvas = z
  .object({
    /**
   * This is the Noid. It's a unique, opaque identifier.
   */
    id: Noid,
    /**
     * Source information for this Canvas.
     */
    source: z.union([
      /**
       * The Canvas is sourced from our legacy repository.
       */
      z.object({
        from: z.enum(["cihm"]),

        /**
         * File path in the legacy repository.
         */
        path: UnixFilePath,

        /**
         * Size of the file, in bytes.
         */
        size: z.number().min(0).optional(),

        /**
         * MD5 checksum.
         */
        md5: MD5.optional(),

      }),

      /**
       * The canvas is sourced from an Archivematica repository.
       */
      z.object({
        from: z.enum(["am"]),

        /**
         * Archivematica AIP id.
         */
        aipId: z.string(),

        /**
         * Archivematica object id.
         */
        objId: z.string(),
      }),

      /**
       * The canvas is sourced directly from IIIF.
       */
      z.object({
        from: z.enum(["IIIF"]),

        /**
         * IIIF image id.
         */
        url: z.string(),
      }),
    ]),

    /**
     * Reference to an image in the legacy repository, for now.
     */
    master: ImageRef,

    /**
     * If the canvas has been taken down from public view, this is the reason why.
     */
    takedown: z
      .enum(["copyright", "privacy", "traditional_knowledge", "other"])
      .optional(),

    /**
     * Reference to the PDF file generated by OCR.
     */
    ocrPdf: FileRef.optional(),

    /**
     * OCR XML type. One of `alto` or `txtmap`.
     */
    ocrType: z.enum(["alto", "txtmap"]).optional(),

    /**
     * As time goes on or errors take place, some canvases may no longer be
     * referenced by a manifest. These canvases may be marked as orphans by setting
     * this flag.
     */
    orphan: z.boolean().optional(),
  })
  .merge(Identified);

export type Canvas = z.infer<typeof Canvas>;
{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://github.com/crkn-rcdr/Access-Platform/blob/master/Databases/schemas/collection.json",
  "title": "Collection Document Schema",
  "description": "",
  "type": "object",
  "properties": {
    "_id": { "$ref": "#/definitions/collectionNoid" },
    "slug": { "$ref": "#/definitions/slug" },
    "aliasedSlugs": { "$ref": "#/definitions/aliasedSlugs" },
    "label": {
      "allOf": [
        { "description": "Collection display label" },
        { "$ref": "#/definitions/iiifTextValue" }
      ]
    },
    "summary": {
      "allOf": [
        { "description": "Short summary about the collection" },
        { "$ref": "#/definitions/iiifTextValue" }
      ]
    },
    "items": {
      "description": "List of collection/manifest NOIDs. For series records that have yet to be fully loaded, member ids can be null",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              { "$ref": "#/definitions/collectionNoid" },
              { "$ref": "#/definitions/manifestNoid" },
              { "type": "null" }
            ]
          },
          "itemLabel": {
            "allOf": [
              {
                "description": "Not yet implemented. A label for identifying this item in the collection item list context."
              },
              { "$ref": "#/definitions/iiifTextValue" }
            ]
          }
        },
        "required": ["id"]
      }
    },
    "public": {
      "description": "Date on which collection was made public. Remove to take down",
      "type": "string",
      "format": "date-time"
    },
    "ordered": {
      "$comment": "We could perhaps create some kind of collection subclass for series, instead of doing this",
      "description": "Determines whether the order of the collection's members is important",
      "type": "boolean",
      "default": false
    },
    "dmdType": {
      "description": "The type of the descriptive metadata record associated with this collection",
      "type": "string",
      "enum": ["marc", "dc"]
    },
    "updateInternalmeta": {
      "allOf": [
        {
          "description": "Trigger for updating the internalmeta database with this collection, or result of an attempted update"
        },
        { "$ref": "#/definitions/update" }
      ]
    }
  },
  "required": ["_id", "slug", "label", "items", "ordered"],
  "definitions": {
    "slug": {
      "description": "User-friendly string for identifying objects. A slug is required for collections, but optional for manifests (superseded manifests won't have them).",
      "type": "string"
    },
    "aliasedSlugs": {
      "description": "Slugs aliased to this object's slug. These slugs will resolve to this object, and a view URL for these slugs will redirect to the 'canonical' one.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/slug"
      }
    },
    "collectionNoid": {
      "description": "Collection NOID",
      "type": "string",
      "pattern": "^69429\\/s[0-9]+[0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]$"
    },
    "manifestNoid": {
      "description": "Manifest NOID",
      "type": "string",
      "pattern": "^69429\\/m[0-9]+[0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]{2}[0-9][0-9bcdfghjkmnpqrstvwxz]$"
    },
    "update": {
      "type": "object",
      "properties": {
        "requestDate": {
          "type": "string",
          "format": "date-time"
        },
        "processDate": {
          "type": "string",
          "format": "date-time"
        },
        "succeeded": { "type": "boolean" },
        "message": { "type": "string" }
      },
      "required": ["requestDate"]
    },
    "iiifTextValue": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  }
}

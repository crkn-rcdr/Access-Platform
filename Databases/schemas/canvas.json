{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://github.com/crkn-rcdr/Access-Platform/blob/master/Databases/schemas/canvas.json",
  "title": "Canvas Document Schema",
  "description": "",
  "type": "object",
  "properties": {
    "_id": { "$ref": "schemas/_util.json#/definitions/canvasNoid" },
    "source": {
      "description": "Information about this canvas's preservation origin",
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "from": {
              "description": "Sourced from legacy Canadiana preservation",
              "const": "cihm"
            },
            "path": {
              "description": "cihm Swift path to source image",
              "type": "string"
            }
          },
          "required": ["from", "path"]
        },
        {
          "properties": {
            "from": {
              "description": "Sourced from CRKN Archivematica installation",
              "const": "am"
            },
            "aipId": {
              "description": "Archivematica AIP ID",
              "type": "string"
            },
            "objId": {
              "description": "Archivematica Object ID",
              "type": "string"
            }
          },
          "required": ["from", "aipId", "objId"]
        }
      ]
    },
    "orphan": {
      "description": "As time goes on or errors take place, some canvases may no longer be referenced by manifest. These canvases may be marked as orphans by setting this flag.",
      "type": "boolean",
      "default": false
    },
    "updateInternalmeta": {
      "allOf": [
        {
          "description": "Trigger for updating the manifests that own this canvas in internalmeta, or result of an attempted update"
        },
        { "$ref": "schemas/_util.json#/definitions/update" }
      ]
    }
  },
  "required": ["_id", "source"],
  "oneOf": [
    {
      "properties": {
        "master": {
          "description": "Information about this canvas's master image. If path is not specified, a file should exist in the access object store at $id.$extension",
          "type": "object",
          "properties": {
            "mime": { "$ref": "schemas/_util.json#/definitions/mime" },
            "size": { "type": "number" },
            "width": { "type": "number" },
            "height": { "type": "number" }
          },
          "required": ["mime", "size", "width", "height"],
          "oneOf": [
            {
              "properties": {
                "path": {
                  "$ref": "schemas/_util.json#/definitions/legacyRepoPath"
                }
              },
              "required": ["path"]
            },
            {
              "properties": {
                "extension": {
                  "type": "string",
                  "enum": ["jpg", "jp2", "jpeg", "tif", "tiff"]
                }
              },
              "required": ["extension"]
            }
          ]
        },
        "ocrPdf": {
          "description": "Information about the derivative PDF generated by OCR. If path is not specified, a file should exist in the access object store at $id.pdf",
          "type": "object",
          "properties": {
            "path": {
              "$ref": "schemas/_util.json#/definitions/legacyRepoPath"
            },
            "size": { "type": "number" }
          },
          "required": ["size"]
        },
        "ocrType": {
          "description": "The type of the OCR XML data associated with this canvas",
          "type": "string",
          "enum": ["alto", "txtmap"]
        }
      },
      "required": ["master"]
    },
    {
      "properties": {
        "takedown": {
          "type": "string",
          "enum": ["copyright", "privacy"]
        }
      },
      "required": ["takedown"]
    }
  ]
}

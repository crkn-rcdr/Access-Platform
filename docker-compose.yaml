version: "3.9"

services:
  #
  # Dev services
  #
  haproxy:
    profiles:
      - dev
    image: haproxy:2.2-alpine
    container_name: access-haproxy
    ports:
      - "80:80"
      - "443:443"
      - "10000:10000"
      - "14747:14747"
    volumes:
      - ./services/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./services/haproxy/certs:/usr/local/etc/haproxy/certs:ro
      - ./services/haproxy/error:/usr/local/etc/haproxy/error:ro
    restart: unless-stopped
    networks:
      access-platform:
        ipv4_address: 172.30.0.2
  couchdb:
    profiles:
      - dev
    container_name: access-couchdb
    image: couchdb:3.1
    environment:
      - COUCHDB_USER=admin
    env_file:
      - .env.secret
    networks:
      access-platform:
        ipv4_address: 172.30.0.50
  noid:
    profiles:
      - dev
    container_name: access-noid
    depends_on:
      - haproxy
    image: docker.c7a.ca/noid:20210226
    volumes:
      - /noid/dbs
    networks:
      access-platform:
        ipv4_address: 172.30.0.53
  packages:
    profiles:
      - dev
    user: ${CURRENT_USER}
    container_name: access-packages
    build:
      context: .
      target: dev
    image: access-platform:dev
    command: ["watch", "-r", "--filter", "./packages", "--parallel"]
    volumes:
      - .:/repo
    networks:
      access-platform:
        ipv4_address: 172.30.0.100
  kivik:
    profiles:
      - dev
    depends_on:
      - haproxy
      - couchdb
    user: ${CURRENT_USER}
    container_name: access-kivik
    build:
      context: .
      target: dev
    image: access-platform:dev
    command: ["-C", "./services/couchdb", "watch:docker"]
    depends_on:
      - couchdb
    volumes:
      - .:/repo
    networks:
      access-platform:
        ipv4_address: 172.30.0.101
  lapin:
    profiles:
      - dev
    depends_on:
      - haproxy
      - couchdb
      - noid
    user: ${CURRENT_USER}
    container_name: access-lapin
    build:
      context: .
      target: dev
    image: access-platform:dev
    command: ["-C", "./services/lapin", "dev"]
    env_file:
      - ./.env.dev
      - ./.env.secret
    depends_on:
      - packages
      - couchdb
    volumes:
      - .:/repo
    networks:
      access-platform:
        ipv4_address: 172.30.0.51
  admin:
    profiles:
      - dev
    depends_on:
      - haproxy
      - lapin
    user: ${CURRENT_USER}
    container_name: access-admin
    build:
      context: .
      target: dev
    image: access-platform:dev
    command: ["-C", "./services/admin", "dev"]
    env_file:
      - ./.env.dev
      - ./.env.secret
    depends_on:
      - lapin
    volumes:
      - .:/repo
    networks:
      access-platform:
        ipv4_address: 172.30.0.52
  #
  # Production services
  #
  haproxy-prod:
    profiles:
      - prod
    image: haproxy:2.2-alpine
    container_name: access-haproxy-prod
    depends_on:
      - lapin-prod
      - admin-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./services/haproxy/certs:/usr/local/etc/haproxy/certs:ro
      - ./services/haproxy/error:/usr/local/etc/haproxy/error:ro
    restart: unless-stopped
    networks:
      access-platform:
        ipv4_address: 172.30.0.2
  lapin-prod:
    profiles:
      - prod
    container_name: access-lapin-prod
    build:
      context: .
      target: prod
    image: access-platform:prod
    command: ["-C", "./services/lapin", "start"]
    env_file:
      - .env.prod
      - .env.secret
    networks:
      access-platform:
        ipv4_address: 172.30.0.51
  admin-prod:
    profiles:
      - prod
    container_name: access-admin-prod
    image: access-platform:prod
    command: ["-C", "./services/admin", "start"]
    env_file:
      - .env.prod
      - .env.secret
    depends_on:
      - lapin-prod
    networks:
      access-platform:
        ipv4_address: 172.30.0.52

networks:
  access-platform:
    name: access-platform
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

version: "3.9"

services:
  haproxy:
    profiles:
      - dev
    image: haproxy:2.2-alpine
    container_name: access-haproxy
    depends_on:
      - couchdb
      - lapin-dev
      - admin-dev
    ports:
      - "80:80"
      - "443:443"
      - "10000:10000"
      - "14747:14747"
    volumes:
      - ./services/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./services/haproxy/certs:/usr/local/etc/haproxy/certs:ro
      - ./services/haproxy/error:/usr/local/etc/haproxy/error:ro
    restart: unless-stopped
    networks:
      access-platform:
        aliases:
          - haproxy
  couchdb:
    profiles:
      - dev
    container_name: access-couch
    image: couchdb:3.1
    env_file:
      - .env.docker
    networks:
      access-platform:
        aliases:
          - couch
    ports:
      - "5984:5984"
  package-watcher:
    profiles:
      - dev
    container_name: access-packages
    build:
      context: .
      target: install
    image: access-platform:dev
    command: ["watch", "-r", "--filter", "./packages", "--parallel"]
    volumes:
      - .:/repo
    networks:
      access-platform:
  kivik-watcher:
    profiles:
      - dev
    container_name: access-kivik
    image: access-platform:dev
    command: ["-C", "./services/couchdb", "watch:docker"]
    depends_on:
      - package-watcher
      - couchdb
    volumes:
      - .:/repo
    networks:
      access-platform:
  lapin-dev:
    profiles:
      - dev
    container_name: access-lapin
    image: access-platform:dev
    command: ["-C", "./services/lapin", "dev"]
    env_file:
      - .env.docker
    depends_on:
      - package-watcher
      - couchdb
    volumes:
      - .:/repo
    networks:
      access-platform:
        aliases:
          - lapin
  admin-dev:
    profiles:
      - dev
    container_name: access-admin
    image: access-platform:dev
    command: ["-C", "./services/proof-of-concept", "dev"]
    env_file:
      - .env.docker
    depends_on:
      - lapin-dev
    volumes:
      - .:/repo
    networks:
      access-platform:
        aliases:
          - admin
  # lapin-prod:
  #   profiles:
  #     - prod
  #   container_name: access-lapin-prod
  #   build:
  #     context: .
  #     target: build
  #   image: access-platform:production
  #   command: ["-C", "./services/lapin", "start"]
  #   env_file:
  #     - .env.docker

networks:
  access-platform:
    name: access-platform
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
